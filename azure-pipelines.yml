# 1. Trigger: 'workflow_dispatch' diubah menjadi trigger manual
# Non-aktifkan Continuous Integration (CI) dan Pull Request (PR)
# Pipeline ini hanya akan berjalan jika dipicu secara manual dari UI Azure DevOps
trigger: none
pr: none

# 2. Agent Pool: 'runs-on' diubah menjadi 'pool'
pool:
  vmImage: 'windows-latest' # Sesuai dengan 'windows-latest'

# 3. Jobs: Sintaks job di Azure DevOps
jobs:
- job: RDPJob # Nama job (sebelumnya 'rdp-job')
  displayName: 'Setup RDP over Tailscale'
  timeoutInMinutes: 360 # Sesuai dengan 'timeout-minutes: 360'

  # 4. Steps: Sintaks 'steps'
  steps:
  
  # 'name:' diubah menjadi 'displayName:'
  # 'run:' diubah menjadi 'powershell:' untuk memastikan eksekusi via PowerShell
  - powershell: |
      Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
      Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      Restart-Service -Name TermService -Force
    displayName: 'Enable RDP'

  - powershell: |
      $password = -join ((33..126) | Get-Random -Count 16 | % {[char]$_})
      $securePass = ConvertTo-SecureString $password -AsPlainText -Force
      New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
      Add-LocalGroupMember -Group "Administrators" -Member "RDP"
      Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
      
      # 5. Variabel: 'echo "..." >> $env:GITHUB_ENV' diubah menjadi format VSO
      # Variabel ini akan tersedia di langkah-langkah berikutnya dalam job yang sama
      Write-Host "##vso[task.setvariable variable=RDP_USER]RDP"
      Write-Host "##vso[task.setvariable variable=RDP_PASS]$password"
    displayName: 'Create RDP User'

  - powershell: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    displayName: 'Set runneradmin Password' # Menambahkan nama untuk kejelasan

  - powershell: |
      $url = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
      $out = "$env:TEMP\tailscale.msi"
      Invoke-WebRequest -Uri $url -OutFile $out
      Start-Process msiexec.exe -ArgumentList "/i $out /quiet /norestart" -Wait
    displayName: 'Install Tailscale'

  - powershell: |
      # 6. Secrets & Variabel Bawaan:
      # '${{ secrets.TAILSCALE_AUTH_KEY }}' diubah menjadi '$(TAILSCALE_AUTH_KEY)'
      # '${{ github.run_id }}' diubah menjadi '$(Build.BuildId)'
      
      & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$(TAILSCALE_AUTH_KEY) --hostname=az-runner-$(Build.BuildId)
      
      $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
      Write-Host "##vso[task.setvariable variable=TS_IP]$ip"
    displayName: 'Connect Tailscale'

  - powershell: |
      Write-Host "`n============================"
      Write-Host "âœ… RDP Connected Successfully"
      
      # 7. Menggunakan Variabel: '$env:VAR' diubah menjadi '$(VAR)'
      Write-Host "IP Address (Tailscale): $(TS_IP)"
      Write-Host "Username: $(RDP_USER)"
      Write-Host "Password: $(RDP_PASS)"
      Write-Host "============================`n"
    displayName: 'Show Connection Info'

  - powershell: |
      while ($true) {
        Write-Host "[$(Get-Date)] RDP Running..."
        Start-Sleep -Seconds 300
      }
    displayName: 'Keep Alive'